'https://plantuml.com/class-diagram

@startuml
!theme spacelab
skinparam BackgroundColor #2B2B2B
'skinparam linetype ortho

namespace devices #222222 {

    interface DeviceEventService  << (S,#00AA00) Service >> {
       Service to receive events from devices and
       forward them to the Device Controllers.
       ..
    }

    class PlayerController << (C,#AAAA00) Component >> {
        Component that aggregates all hardware controller of
        the players to grant access to them.
        ..
    }

    class BoardController << (C,#AAAA00) Component >> {
       Component that aggregates all hardware board
       and creates an abstraction of a single game board.
       ..
    }

    class EventThreadPool << (C,#AAAA00) Component >> {
      Single thread pool used by the device event handling
    }

    PlayerController --> DeviceEventService : handles
    BoardController --> DeviceEventService : handles


}

namespace communication #222222 {

    interface AudioCommunicationService  << (S,#00AA00) Service >> {
        Service to perform audio playback to the players.
        ..
        + play(String, String, Locale, AudioVariable...): void
        + playSync(String, String, Locale, AudioVariable...): void
    }
}

namespace plan #222222 {

    class PlanDeltaService   << (S,#00AA00) Service >> {
        Service that calculates the difference between two Plans and
        interacts with the player to perform the changes on the physical
        board.
        ..
    }

    class PlanLibrary << (C,#AAAA00) Component >> {
       Library with all available plans.
       ..
    }

    class TileLibrary << (C,#AAAA00) Component >> {
        Library with all available tile.
        ..
    }

    PlanLibrary .. TileLibrary : uses
    PlanDeltaService .. communication.AudioCommunicationService : uses
    PlanDeltaService .. devices.BoardController : uses

}

class GameLibrary {
  Facade class to all libraries from other packages to
  grant a single access point to the game resources.
  ..
}

GameLibrary --o plan.PlanLibrary
GameLibrary --o plan.TileLibrary



@enduml